	#include "rwmake.ch"
	
	User Function RFINA137()
	
	/*
	ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
	±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
	±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
	±±ºPrograma  ³RFINA137  ºAutor  ³       Nava         º Data ³   05/03/09  º±±
	±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
	±±ºDesc.     ³Envio/Preparacao de Contribuicoes Confederativa CEF         º±±
	±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
	±±ºUso       ³Especifico SINDHOSP                                         º±±
	±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
	±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
	ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
	*/
	
	LOCAL aArea 	:= GetArea()
	LOCAL cTitulo  := "Cobranca Confederativa"
	LOCAL nOpc     := 0
	
	PRIVATE cPerg := "FINA37"
	PRIVATE cConta, cAgenc, oDlg1
	                                          
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Variaveis utilizadas para parametros                                       ³
	³ mv_par01   // ano para envio   N2                                          ³
	³ mv_par02   // Parcela          C1                                          ³
	³ mv_par03   // Data de vencimento                                           ³
	³ mv_par04   // Data de Emissao                                              ³
	³ mv_par05   // Sequencia                                                    ³
	³ mv_par06   // arquivo de saida 					     								  ³
	³ mv_par07   // Codigo do Banco                                              ³
	³ mv_par08   // codigo da agencia                                            ³
	³ mv_par09   // Codigo da conta                                              ³
	³ mv_par10   // codigo da subconta                                           ³
	³ mv_par11   // destinatario - Entidades, Escritorios , Reenvio 	           ³
	³            // destinatario - Reenvio Entidades, Reenvio Escritorios 	     ³
	³ mv_par12   // 1A. msg	     c12				                    	              ³
	³ mv_par13   // 2A. msg	- PARTE 1   c30				 	                       ³
	³ mv_par14   // 2A. msg	- PARTE 2   c30				 	                       ³
	³ mv_par15   // Base Territorial para envio			 	                       ³
	³ mv_par16   // Prefixo/Ano da parcela a considerar baixa	                 ³
	³ mv_par17   // Parcela a considerar baixa			 	                       ³
	³ mv_par18   // Arq. para Mala Direta			 	                             ³
	³ mv_par19   // Prefixo/Ano da 2a. parcela a considerar baixa	              ³
	³ mv_par20   // 2a. Parcela a considerar baixa			 	                    ³
	³ mv_par21   // Data de Cadastro                                             ³
	³ mv_par22   // Codigo Sindicato                                             ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	*/
	Pergunte(cPerg,.T.)
	
	@ 096,042 TO 375,505 DIALOG oDlg1 TITLE cTitulo
	@ 008,010 TO 100,222
	@ 023,014 SAY "Este programa fara a geracao de Arquivo para cobranca da "
	@ 033,014 SAY "Contribuicao Confederativa DA CEF"
	@ 063,014 SAY "CONFIRME PARA INICIAR A GERACAO DE DADOS         "
	@ 110,138 BMPBUTTON TYPE 1 ACTION Iniciar()
	@ 110,168 BMPBUTTON TYPE 5 ACTION Pergunte(cPerg,.T.)
	@ 110,198 BMPBUTTON TYPE 2 ACTION Close(oDlg1)
	
	ACTIVATE DIALOG oDlg1 CENTERED
	
	RestArea( aArea )
	
	Return
	*************************
	Static Function Iniciar()
	
	Close(oDlg1)
	Processa( {|| Gerar() })
	
	Return
	*************************
	
	Static Function Gerar()
	
	LOCAL aStru
	LOCAL cAgenc 	:= Strzero( Val( mv_par08 ), 5 )	
	LOCAL cConta 	:= SUBSTR( Rtrim( mv_par09 ), 1, Len( Rtrim ( mv_par09 ) ) - 2 ) + RIGHT( Rtrim( mv_par09 ), 1 )
	LOCAL dVenc 	:= strzero(day(mv_par03),2)+strzero(month(mv_par03),2)+substr(strzero(year(mv_par03),4),3,2)
	LOCAL dEmis 	:= strzero(day(mv_par04),2)+strzero(month(mv_par04),2)+substr(strzero(year(mv_par04),4),3,2)
	
	PRIVATE cArqTmp1, cArqTmp2, cArqTmp3, cArqTmp4, cArqTmp5
	
	/*
	
	N. SINDICATO 									BANCO    AGENC OPERACAO    C/C 
	1 	SINDHOSPRU - PRESIDENTE PRUDENTE 	104 		0242 	003 		00000973-4 
	2 	SINDHORP - RIBEIRÃO PRETO 				104 		0242 	003 		00000989-0 
	3 	SINDHOSCLAB-MOGI - MOGI DAS CRUZES 	104 		0242 	003 		00000974-2 
	4 	SINDHOSPCLAB-JUNDIAI - JUNDIAI 		104 		0242 	003 		00000986-6
	5 	SINDHOSCLAB-SUZANO - SUZANO 			104 		0242 	003 		00000990-4
	
	========================== 
	
	Registro Header de Arquivo
	======================================================================================
	Campo 										 Posição|  Nº  NºFormato| Default | Descricao
	                  						|De |Ate|Dig|Dec|       |         |
	======================================================================================
	01.0 Codigo Registro                |  1|  1|  1|   |   Num | '0'     |
	02.0 Codigo Remessa                    2   2   1    |   Num | '1'     |
	03.0 Literal Remessa                   3   9   7    |  Alfa |'REMESSA'|
	04.0 Codigo Servico                   10  11   2    |   Num | '01'    |
	05.0 Literal Servico                  12  26  15    |  Alfa |'COBRANCA| 
	06.0 Codigo Empresa                   27  42  16    |  Alfa |         | 
	07.0 Brancos                          43  46   4 -  |  Alfa | Brancos | 
	08.0 Nome Empresa                     47  76  30 -     Alfa |         | 
	09.0 Codigo Banco                     77  79   3 -      Num |  '104'  | 
	10.0 Nome Banco                       80  94  15 -     Alfa |'C ECON FEDERAL| *G007
	11.0 Data Gravacao       				  95 100   6 -      Num |         |
	12.0 Brancos             				 101 389 289 -     Alfa | Brancos |
	13.0 Numero Sequencial A             390 394   5 -      Num |         | 
	14.0 Numero Sequencial A             395 400   6 -      Num |`000001 
	*/
	
	aStru 	:= {} // Registro Header de Arquivo
	
	AADD( aStru, { "COD_REGIS"  	, "C" , 001 , 0 } ) // 01	// "0"
	AADD( aStru, { "COD_REMES"		, "C" , 001 , 0 } ) // 02	// "1"
	AADD( aStru, { "LITE_REME" 	, "C" , 007 , 0 } ) // 03	// "REMESSA"
	AADD( aStru, { "COD_SERVI"		, "C" , 002 , 0 } ) // 04	// "01"
	AADD( aStru, { "LITE_SERV"  	, "C" , 015 , 0 } ) // 05	// "COBRANCA"
	AADD( aStru, { "COD_EMPR"  	, "C" , 016 , 0 } ) // 06	// "0242003000009904"
	AADD( aStru, { "BRANCO1"		, "C" , 004 , 0 } ) // 07	// 
	AADD( aStru, { "NOME_EMPR"		, "C" , 030 , 0 } ) // 08	// "SIND.HOSP.CLIN.CAS.S.LAB.DE SP"
	AADD( aStru, { "COD_BANCO"		, "C" , 003 , 0 } ) // 09	// "104"
	AADD( aStru, { "NOME_BAN"   	, "C" , 015 , 0 } ) // 10	// "C ECON FEDERAL"
	AADD( aStru, { "DATA_GRAV"		, "C" , 006 , 0 } ) // 11	// dDataBase
	AADD( aStru, { "BRANCO2"   	, "C" , 289 , 0 } ) // 12	// 
	AADD( aStru, { "NUM_SEQ"		, "C" , 005 , 0 } ) // 13	// 
	AADD( aStru, { "SEQ_FIXO"  	, "C" , 006 , 0 } ) // 14	// "000001"
	
	cArqTmp1	:= CriaTrab( aStru, .T. )
	dbUseArea( .T.,, cArqTmp1, "HEAD")
	                   
	/*
	Registro Detalhe de Arquivo
	======================================================================================
	Campo 										    Posição|  Nº  NºFormato   | Default | Descricao
	                  					   	|De |Ate|Dig|Dec|          |         |
	======================================================================================
	01.0 Codigo Registro         		      |  1|  1|  1|   | Numerico | "1"     |
	02.0 Inscrição da Empresa 						2   3   2      Numerico   "02"      "01" - CPF / "02" - CGC
	03.0 Número da inscrição                  4  17  14      Numérico 				Código válido
	04.0 Código da Empresa na Caixa			  18  33  16      Numérico   "0242003000009904"  Agencia + Operacao + Conta + digito -   Vide NOTA 1
	05.0 Brancos Campo em branco             34  35   2      Alfanum.   Brancos
	06.0 Taxa de permanência                 36  37   2      Numérico   "00"        Vide NOTA 12
	07.0 Identificação do título na Empresa  38  62  25      Alfanum.   "104"+mv_par05+ _nseq
	08.0 Nosso Número                        63  73  11      Numérico   "9"+ strzero( mv_par05, 9 ) + Modulo11(strzero( mv_par05, 9 ))  Vide NOTA 2
	09.0 Brancos                             74  76   3      Alfanum.   Brancos
	10.0 Mensagem                            77 106  30      Alfanum.
	11.0 Código da Carteira                 107 108   2      Numérico   "14"        Vide NOTA 3
	12.0 Código de Ocorrência               109 110   2      Numérico   "01"        Vide NOTA 4
	13.0 Seu número                         111 120  10      Alfanum.   DETA->NUM_DOCTO
	14.0 Vencimento                         121 126   6      Numérico               Vide NOTA 13
	15.0 Valor do Título                    127 139  13      Numérico
	16.0 Código do Banco                    140 142   3      Numérico    "104"
	17.0 Agência Cobradora                  143 147   5      Numérico   Vide NOTA 5
	18.0 Espécie do Título                  148 149   2      Numérico   Vide NOTA 6               
	19.0 Aceite                             150 150   1      Alfanum.   A- aceito / N- não aceito
	20.0 Data de emissão                    151 156   6      Numérico   Data válida (DDMMAA)
	21.0 Instrução nº 1 							 157 158   2      Numérico   "00"
	22.0 Instrução nº 2                     159 160   2      Numérico   "00"                Preenchido com zeros
	23.0 Juros de 1 dia 							 161 173  13      Numérico
	24.0 Data do Desconto                   174 179   6      Numérico Data Válida (DDMMAA)
	25.0 Valor do Desconto                  180 192  13      Numérico
	26.0 Valor do I.O.F.                    193 205  13      Numérico Valor expresso em Reais
	27.0 Abatimento                         206 218  13      Numérico                     
	28.0 Inscrição do sacado                219 220   2      Numérico "02"                  "01" - CPF / "02" - CGC
	29.0 Número de Inscrição                221 234  14      Numérico Código Válido
	30.0 Nome do Sacado                     235 274  40      Alfanum.
	31.0 Logradouro Rua, número e complem.  275 314  40      Alfanum.
	32.0 Bairro do Sacado 						 315 326  12 	   Alfanum.
	33.0 CEP do Sacado 							 327 334   8 		Numérico
	34.0 Cidade do Sacado 						 335 349  15 		Alfanum.
	35.0 Estado do Sacado 						 350 351   2 		Alfanum.
	36.0 Data da Multa 							 352 357   6 		Numérico Data Valida (DDMMAA)
	37.0 Valor da Multa 							 358 367  10 		Numérico
	38.0 Nome Avalista 							 368 389  22 		Alfanum
	39.0 Instrução Número 3 					 390 391   2 		Numérico 00 - ( 01 se houver REG 2 )
	40.0 Prazo 										 392 393   2 		Numérico Vide NOTA 8
	41.0 Moeda 										 394 394   1 		Numérico Vide NOTA 9
	42.0 Número seqüencial 						 395 400   6 		Numérico
	*/
	
	aStru := {}  // Registro Detalhe do Arquivo
	
	AADD( aStru, { "COD_REGIS"		, "C" , 001 , 0 } ) // 01
	AADD( aStru, { "TIPO_INSCR"	, "C" , 002 , 0 } ) // 02
	AADD( aStru, { "NUM_INSC"		, "C" , 014 , 0 } ) // 03
	AADD( aStru, { "CODI_EMPR"		, "C" , 016 , 0 } ) // 04
	AADD( aStru, { "BRANCO1"		, "C" , 002 , 0 } ) // 05
	AADD( aStru, { "TX_PERMAN"		, "C" , 002 , 0 } ) // 06
	AADD( aStru, { "NUM_TITZ9"		, "C" , 025 , 0 } ) // 07         
	AADD( aStru, { "NOSSO_NUM"		, "C" , 011 , 0 } ) // 08
	AADD( aStru, { "BRANCO2"  		, "C" , 003 , 0 } ) // 09
	AADD( aStru, { "MENSAGEM1" 	, "C" , 030 , 0 } ) // 10
	AADD( aStru, { "COD_CART"   	, "C" , 002 , 0 } ) // 11
	AADD( aStru, { "COD_OCORR"		, "C" , 002 , 0 } ) // 12
	AADD( aStru, { "NUM_DOCTO" 	, "C" , 010 , 0 } ) // 13
	AADD( aStru, { "VENCIMENTO"	, "C" , 006 , 0 } ) // 14
	AADD( aStru, { "VALOR"       	, "C" , 013 , 0 } ) // 15
	AADD( aStru, { "COD_BANCO"  	, "C" , 003 , 0 } ) // 16          
	AADD( aStru, { "AGENCIA"  		, "C" , 005 , 0 } ) // 17
	AADD( aStru, { "ESPECIE"  		, "C" , 002 , 0 } ) // 18
	AADD( aStru, { "ACEITE" 	 	, "C" , 001 , 0 } ) // 19
	AADD( aStru, { "EMISSAO"  		, "C" , 006 , 0 } ) // 20
	AADD( aStru, { "INSTRUCAO1"	, "C" , 002 , 0 } ) // 21
	AADD( aStru, { "INSTRUCAO2"	, "C" , 002 , 0 } ) // 22
	AADD( aStru, { "JUROS1DIA"		, "C" , 013 , 0 } ) // 23
	AADD( aStru, { "DATA_DESC"		, "C" , 006 , 0 } ) // 24
	AADD( aStru, { "VALOR_DESC"	, "C" , 013 , 0 } ) // 25
	AADD( aStru, { "VALOR_IOF"		, "C" , 013 , 0 } ) // 26
	AADD( aStru, { "ABATIMENTO"	, "C" , 013 , 0 } ) // 27
	AADD( aStru, { "TIPO_SACA" 	, "C" , 002 , 0 } ) // 28
	AADD( aStru, { "INSCR_SACA"	, "C" , 014 , 0 } ) // 29
	AADD( aStru, { "NOME_SACA"		, "C" , 040 , 0 } ) // 30
	AADD( aStru, { "LOGRA_SACA"	, "C" , 040 , 0 } ) // 31
	AADD( aStru, { "BAIRR_SACA"	, "C" , 012 , 0 } ) // 32
	AADD( aStru, { "CEP_SACA" 		, "C" , 008 , 0 } ) // 33
	AADD( aStru, { "CIDA_SACA"		, "C" , 015 , 0 } ) // 34
	AADD( aStru, { "UF_SACA"  		, "C" , 002 , 0 } ) // 35
	AADD( aStru, { "DATA_MULTA"	, "C" , 006 , 0 } ) // 36
	AADD( aStru, { "VLR_MULTA"		, "C" , 010 , 0 } ) // 37
	AADD( aStru, { "NOME_AVAL"		, "C" , 022 , 0 } ) // 38
	AADD( aStru, { "INSTRUCAO3"	, "C" , 002 , 0 } ) // 39
	AADD( aStru, { "PRAZO"    		, "C" , 002 , 0 } ) // 30
	AADD( aStru, { "MOEDA"    		, "C" , 001 , 0 } ) // 41
	AADD( aStru, { "NUM_SEQ"		, "C" , 006 , 0 } ) // 42
	
	cArqTmp2 := CriaTrab( aStru, .T. )
	dbUseArea(.t.,, cArqTmp2, "DETA")
	
	/*
	Registro Trailer
	======================================================================================
	Campo 										    Posição|  Nº  NºFormato| Default | Descricao
	                  					   	|De |Ate|Dig|Dec|       |         |
	======================================================================================
	01.0 Codigo Registro         		      |  1|  1|  1|   | Numerico | "9"     |
	02.0 Brancos                              2 394 393      Alfanum.   Brancos
	03.0 Número Sequencial                  395 400   6      Numérico
	*/
	
	aStru := {}  // Registro Trailer de Arquivo
	
	AADD( aStru, { "COD_REGIS"  , "C" , 001 , 0 } )
	AADD( aStru, { "BRANCO"     , "C" , 393 , 0 } )
	AADD( aStru, { "NUM_SEQUEN" , "C" , 006 , 0 } )
	
	cArqTmp3 := CriaTrab( aStru, .T. )
	dbUseArea(.t.,,cArqTmp3,"TRAI")
	
	/*
	Registro Padrao Final que vai juntar todos os outros registros
	======================================================================================
	*/
	
	aStru := {}  // Registro Padrao
	
	AADD( aStru, { "REGISTRO"  , "C" , 400 , 0 } )
	
	cArqTmp4 := CriaTrab(aStru,.t.)
	dbUseArea(.t.,,cArqTmp4,"REGI")
	dbSelectArea("REGI")
	
	/*
	Registro Mala Direta para a Grafica
	======================================================================================
	*/
	
	aStru := {}  // MALA DIRETA
	
	AADD( aStru, { "CGC_SACADO" , "C" , 014 , 0 } )
	AADD( aStru, { "NOME_SACAD" , "C" , 040 , 0 } )
	AADD( aStru, { "END_SACADO" , "C" , 040 , 0 } )
	AADD( aStru, { "BAI_SACADO" , "C" , 020 , 0 } )
	AADD( aStru, { "CEP_SACADO" , "C" , 005 , 0 } )
	AADD( aStru, { "CEPC_SACAD" , "C" , 003 , 0 } )
	AADD( aStru, { "MUN_SACADO" , "C" , 015 , 0 } )
	AADD( aStru, { "EST_SACADO" , "C" , 002 , 0 } )
	AADD( aStru, { "NOME_ENT"   , "C" , 040 , 0 } )
	AADD( aStru, { "END_ENT"    , "C" , 040 , 0 } )
	AADD( aStru, { "BAI_ENT"    , "C" , 020 , 0 } )
	AADD( aStru, { "CEP_ENT"    , "C" , 005 , 0 } )
	AADD( aStru, { "CEPC_ENT"   , "C" , 003 , 0 } )
	AADD( aStru, { "MUN_ENT"    , "C" , 015 , 0 } )
	AADD( aStru, { "EST_ENT"    , "C" , 002 , 0 } )
	
	cArqTmp5 := CriaTrab(aStru,.t.)
	dbUseArea(.t.,,cArqTmp5,"MALA")
	dbSelectArea("MALA")
	
	/*        
	Inicio da Montagem dos Registros
	======================================================================================
	
	Registro Header de Arquivo
	======================================================================================
	Campo 										 Posição|  Nº  NºFormato| Default | Descricao
	                  						|De |Ate|Dig|Dec|       |         |
	======================================================================================
	01.0 Codigo Registro                |  1|  1|  1|   |   Num | '0'     |
	02.0 Codigo Remessa                    2   2   1    |   Num | '1'     |
	03.0 Literal Remessa                   3   9   7    |  Alfa |'REMESSA'|
	04.0 Codigo Servico                   10  11   2    |   Num | '01'    |
	05.0 Literal Servico                  12  26  15    |  Alfa |'COBRANCA| 
	06.0 Codigo Empresa                   27  42  16    |  Alfa |         | 
	07.0 Brancos                          43  46   4 -  |  Alfa | Brancos | 
	08.0 Nome Empresa                     47  76  30 -     Alfa |         | 
	09.0 Codigo Banco                     77  79   3 -      Num |  '104'  | 
	10.0 Nome Banco                       80  94  15 -     Alfa |'C ECON FEDERAL| *G007
	11.0 Data Gravacao       				  95 100   6 -      Num |         |
	12.0 Brancos             				 101 389 289 -     Alfa | Brancos |
	13.0 Numero Sequencial A             390 394   5 -      Num |         | 
	14.0 Numero Sequencial A             395 400   6 -      Num |`000001 
	*/
	
	dbSelectArea("HEAD")  //GERANDO REGISTRO HEADER
	RecLock("HEAD",.T.)
	
	HEAD->COD_REGIS	 := "0"
	HEAD->COD_REMES	 := "1"
	HEAD->LITE_REME 	 := "REMESSA"
	HEAD->COD_SERVI	 := "01"
	HEAD->LITE_SERV  	 := "COBRANCA"
	HEAD->COD_EMPR  	 := "0242003000009904"
	HEAD->BRANCO1		 := ""
	HEAD->NOME_EMPR	 := "SIND.HOSP.CLIN.CAS.S.LAB.DE SP"
	HEAD->COD_BANCO	 := "104"
	HEAD->NOME_BAN   	 := "C ECON FEDERAL"
	HEAD->DATA_GRAV	 := dEmis
	HEAD->BRANCO2   	 := ""
	HEAD->NUM_SEQ		 := "00001"
	HEAD->SEQ_FIXO  	 := "000001"
	
	MsUnLock()
	
	dbSelectArea("SA1")
	if (mv_par11 == 2 .or. mv_par11 == 4 )
		DBSETORDER(1)
		dbgotop()
		ProcRegua(RecCount(),22,05)
		DO WHILE !EOF()
			IncProc()
			DbSelectArea("SZC")
			DbSetorder(2)
			if ! ( dbseek( xFilial() + SA1->A1_ESCCONT ) )
				DBSELECTAREA("SA1")
				reclock("SA1",.F.)
				SA1->A1_ESCCONT := ""
				MSUNLOCK()
			ENDIF
			DBSELECTAREA("SA1")
			DBSKIP()
		ENDDO
		DbOrderNickame('7')  && Ordena arq. por CNPJ escrit. contabil // Atencao (UPDXFUN).
		dbseek(xfilial()+"0",.t.)
	else
		Dbsetorder(1) // Atencao (UPDXFUN).
		dbGotop()
	EndIf
	
	ProcRegua(RecCount(),22,05)
	_nRegistros := 0
	_nIncluidos := 0
	_cTitulo := "Gerando Arquivo Bancario - CEF Confederativa"
	_nseq := "000002"
	_nValTot := 0
	
	Do While !Eof()
		IncProc("Cliente: "+sa1->a1_cod+"-"+sa1->a1_nreduz)
		IF LEN(ALLTRIM(SA1->A1_CEP))<> 8
			DBSELECTAREA("SA1")
			DBSKIP()
			LOOP
		ENDIF
		if !empty(mv_par15)
			If val(SA1->A1_BASE) <> val(mv_par15)
				dbSelectArea("SA1")
				dbskip()
				loop
			EndIf
		endif
		if !empty(mv_par21) .and. sa1->a1_dtcadas > mv_par21
			DBSELECTAREA("SA1")
			DBSKIP()
			LOOP
		endif	
		If ! EMPTY( MV_PAR22) .AND. SA1->A1_SINDICA <> MV_PAR22
			dbSelectArea("SA1")
			dbskip()
			loop
		EndIf
		If !EMPTY(SA1->A1_INAT)
			dbSelectArea("SA1")
			dbskip()
			loop
		EndIf
		If SA1->A1_FILANT == "X"      && Envio para Todos (Geral)
			dbSelectArea("SA1")
			dbskip()
			loop
		EndIf
	
		If SA1->A1_FOLCENT == "S"      && Envio para Todos (Geral)
	
			/*BEGINDOC
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄP¿
			//³Exclusao de emissao para as empresas que possuam folha centralizada.³
			//³Campo A1_FOLCENT ="S"                                               ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄPÙ
			ENDDOC*/
	
			dbSelectArea("SA1")
			dbskip()
			loop
		EndIf
	
		IF VAL(SA1->A1_CATEG1) >= 12000
			dbSelectArea("SA1")
			dbskip()
			loop
		EndIf
		DbSelectArea("SZC")
		DbSetorder(2)
		if ! ( dbseek( xFilial() + SA1->A1_ESCCONT ) )
			DBSELECTAREA("SA1")
			reclock("SA1",.F.)
			SA1->A1_ESCCONT := ""
			MSUNLOCK()
		ENDIF
		DBSELECTAREA("SA1")
		If (mv_par11 == 1 .or. mv_par11 == 3 ) .and. len(alltrim(SA1->A1_ESCCONT))>0 	&& Envio para Todos (Geral)
			dbSelectArea("SA1")
			dbskip()
			loop
		EndIf
		if (mv_par11 == 2 .or. mv_par11 == 4 )
			if len(alltrim(SA1->A1_ESCCONT))==0
				dbSelectArea("SA1")
				dbskip()
				loop
			endif
		EndIf
		&& Verifica se existe titulo para parcela a ser enviada  (Normal/Escrit/Avulso)
		IF MV_PAR02 == "1"
			dbSelectArea("SE1")
			dbOrderNickName('20')  // Dbsetorder(20) // Alterado (UPDXFUN).
	/*
			if dbseek( xFilial()+strzero(mv_par01,2)+" "+SA1->A1_COD+mv_par02+"DP") .or.;
				dbseek( xFilial()+strzero(mv_par01,2)+"E"+SA1->A1_COD+mv_par02+"DP") .or.;
				dbseek( xFilial()+strzero(mv_par01,2)+"A"+SA1->A1_COD+mv_par02+"DP")
	*/
			if MsSeek( xFilial("SE1")+SA1->A1_CGC + strzero(mv_par01,2)+" "+mv_par02+"DP") .or.;
				MsSeek( xFilial("SE1")+SA1->A1_CGC + strzero(mv_par01,2)+"E"+mv_par02+"DP") .or.;
				MsSeek( xFilial("SE1")+SA1->A1_CGC + strzero(mv_par01,2)+"A"+mv_par02+"DP")
				dbSelectArea("SA1")
				dbskip()
				loop
			endif
		ELSEIF MV_PAR02== "2"
			IF MV_PAR11 == 1 .OR.MV_PAR11 == 2
				dbSelectArea("SE1")
				dbOrderNickName('20')  // Dbsetorder(20) // Alterado (UPDXFUN).
		/*
				if dbseek( xFilial()+strzero(mv_par01,2)+" "+SA1->A1_COD+mv_par02+"DP") .or.;
					dbseek( xFilial()+strzero(mv_par01,2)+"E"+SA1->A1_COD+mv_par02+"DP") .or.;
					dbseek( xFilial()+strzero(mv_par01,2)+"A"+SA1->A1_COD+mv_par02+"DP")
		*/
				if MsSeek( xFilial("SE1")+SA1->A1_CGC + strzero(mv_par01,2)+" "+mv_par02+"DP") .or.;
					MsSeek( xFilial("SE1")+SA1->A1_CGC + strzero(mv_par01,2)+"E"+mv_par02+"DP") .or.;
					MsSeek( xFilial("SE1")+SA1->A1_CGC + strzero(mv_par01,2)+"A"+mv_par02+"DP")
						dbSelectArea("SA1")
					dbskip()
					loop
				endif
			ENDIF
			dbSelectArea("SE1")
			dbOrderNickName('20')  // Dbsetorder(20) // Alterado (UPDXFUN).
	//		dbseek( xFilial()+strzero(mv_par01,2)+" "+SA1->A1_COD+" "+"DP")
			MsSeek( xFilial("SE1")+SA1->A1_CGC + strzero(mv_par01,2)+" 1DP")
			IF FOUND()
				IF ALLTRIM(SE1->E1_NATUREZ)== "0301"
					dbSelectArea("SA1")
					dbskip()
					loop
				endif
			endif
			dbSelectArea("SE1")
			dbOrderNickName('20')  // Dbsetorder(20) // Alterado (UPDXFUN).
	//		dbseek( xFilial()+strzero(mv_par01,2)+"E"+SA1->A1_COD+"1"+"DP")
			MsSeek( xFilial("SE1")+SA1->A1_CGC + strzero(mv_par01,2)+"E1DP")
			IF FOUND()
				IF ALLTRIM(SE1->E1_NATUREZ)== "0301"
					dbSelectArea("SA1")
					dbskip()
					loop
				endif
			endif
			dbSelectArea("SE1")
			dbOrderNickName('20')  // Dbsetorder(20) // Alterado (UPDXFUN).
	//		dbseek( xFilial()+strzero(mv_par01,2)+"A"+SA1->A1_COD+"1"+"DP")
			MsSeek( xFilial("SE1")+SA1->A1_CGC + strzero(mv_par01,2)+"A1DP")
			IF FOUND()
				IF ALLTRIM(SE1->E1_NATUREZ)== "0301"
					dbSelectArea("SA1")
					dbskip()
					loop
				endif
			endif
			dbSelectArea("SE1")
			dbOrderNickName('20')  // Dbsetorder(20) // Alterado (UPDXFUN).
	//		dbseek( xFilial()+strzero(mv_par01,2)+" "+SA1->A1_COD+"2"+"DP")
			MsSeek( xFilial("SE1")+SA1->A1_CGC + strzero(mv_par01,2)+" 2DP")
			IF FOUND()
				dbSelectArea("SA1")
				dbskip()
				loop
			endif
			dbSelectArea("SE1")
			dbOrderNickName('20')  // Dbsetorder(20) // Alterado (UPDXFUN).
	//		dbseek( xFilial()+strzero(mv_par01,2)+"E"+SA1->A1_COD+"2"+"DP")
			MsSeek( xFilial("SE1")+SA1->A1_CGC + strzero(mv_par01,2)+"E2DP")
			IF FOUND()
				dbSelectArea("SA1")
				dbskip()
				loop
			endif
			dbSelectArea("SE1")
			dbOrderNickName('20')  // Dbsetorder(20) // Alterado (UPDXFUN).
	//		dbseek( xFilial()+strzero(mv_par01,2)+"A"+SA1->A1_COD+"2"+"DP")
			MsSeek( xFilial("SE1")+SA1->A1_CGC + strzero(mv_par01,2)+"A2DP")
			IF FOUND()
				dbSelectArea("SA1")
				dbskip()
				loop
			endif
		endif
		&& Verifica se  isento da Confederativa e Geral Baixa da Parcela caso positivo
		dbSelectArea("SE1")
		dbOrderNickName('20')  // Dbsetorder(20) // Alterado (UPDXFUN).
		//	if (SA1->A1_CATLEIT $"66/67/68/70/71/72" .AND. ALLTRIM(SA1->A1_SITUAC)=="AS")
		IF  SA1->A1_NATUREZ = "1000" .AND. ALLTRIM(SA1->A1_SITUAC)=="AS"
	//		if !(dbseek( xFilial()+strzero(mv_par01,2)+" "+SA1->A1_COD+mv_par02+"DP")) .and.;
	//			!(dbseek( xFilial()+strzero(mv_par01,2)+"E"+SA1->A1_COD+mv_par02+"DP")) .and.;
	//			!(dbseek( xFilial()+strzero(mv_par01,2)+"A"+SA1->A1_COD+mv_par02+"DP"))
			if ! MsSeek( xFilial("SE1")+SA1->A1_CGC + strzero(mv_par01,2)+" "+mv_par02+"DP") .and.;
				! MsSeek( xFilial("SE1")+SA1->A1_CGC + strzero(mv_par01,2)+"E"+mv_par02+"DP") .and.;
				! MsSeek( xFilial("SE1")+SA1->A1_CGC + strzero(mv_par01,2)+"A"+mv_par02+"DP")
				RecLock("SE1",.T.)
	
				SE1->E1_FILIAL   := xFilial()
				SE1->E1_PREFIXO  := strzero(MV_PAR01,2)
				SE1->E1_NUM      := GETSXENUM("SE1","E1_NUM")
				SE1->E1_PARCELA  := mv_par02
				SE1->E1_TIPO     := "DP"
				SE1->E1_NATUREZ  := "002"
				SE1->E1_CLIENTE  := SA1->A1_COD
				SE1->E1_CODASSO  := SA1->A1_CODASSO
				SE1->E1_CGC	     := SA1->A1_CGC
				SE1->E1_CATEG1   := SA1->A1_CATEG1
				SE1->E1_ERSIN	  := SA1->A1_ERSIN
				SE1->E1_BASE	  := SA1->A1_BASE
				SE1->E1_LOJA     := SA1->A1_LOJA
				SE1->E1_NOMCLI   := SA1->A1_NOME
				SE1->E1_EMISSAO  := date()
				SE1->E1_MOVIMEN  := date()
				SE1->E1_EMIS1    := date()
				SE1->E1_VENCTO   := mv_par03
				SE1->E1_VENCREA  := DataValida( mv_par03 )
				SE1->E1_VENCORI  := mv_par03
				SE1->E1_HIST     := "Isento Contr. "+ substr( dtos( mv_par03 ),5,2)+"/"+substr(dtos(mv_par03),3,2)
				SE1->E1_VALOR    := 0
				SE1->E1_SALDO    := 0
				SE1->E1_VLCRUZ   := 0
				SE1->E1_VALJUR   := 0
				SE1->E1_MOEDA    := 1
				SE1->E1_PORTADO  := "104"
				SE1->E1_AGEDEP   := ALLTRIM(MV_PAR08) //"0198"
				SE1->E1_CONTA    := cConta
				SE1->E1_SITUACA  := "1"
				SE1->E1_OCORREN  := "01"
				SE1->E1_ORIGEM  := "RFINA137"
				SE1->E1_STATUS  := "B"
				SE1->E1_JUROS   := 0
				SE1->E1_VALLIQ  := 0
				SE1->E1_BAIXA   := mv_par03
				SE1->E1_OK      := CHR(69)+CHR (120)
				SE1->E1_CONFED  := "Isento"
	
				MSUNLOCK()
				CONFIRMSX8()
				
				DBSELECTAREA("SA1")
				DBSKIP()
				LOOP
			ENDIF
		ENDIF
	
	
	/*
	Registro Detalhe de Arquivo
	======================================================================================
	Campo 										    Posição|  Nº  NºFormato   | Default | Descricao
	                  					   	|De |Ate|Dig|Dec|          |         |
	======================================================================================
	01.0 Codigo Registro         		      |  1|  1|  1|   | Numerico | "1"     |
	02.0 Inscrição da Empresa 						2   3   2      Numerico   "02"      "01" - CPF / "02" - CGC
	03.0 Número da inscrição                  4  17  14      Numérico 				Código válido
	04.0 Código da Empresa na Caixa			  18  33  16      Numérico   "0242003000009904"  Agencia + Operacao + Conta + digito -   Vide NOTA 1
	05.0 Brancos Campo em branco             34  35   2      Alfanum.   Brancos
	06.0 Taxa de permanência                 36  37   2      Numérico   "00"        Vide NOTA 12
	07.0 Identificação do título na Empresa  38  62  25      Alfanum.   "104"+mv_par05+ _nseq
	08.0 Nosso Número                        63  73  11      Numérico   "9"+ strzero( mv_par05, 9 ) + Modulo11(strzero( mv_par05, 9 ))  Vide NOTA 2
	09.0 Brancos                             74  76   3      Alfanum.   Brancos
	10.0 Mensagem                            77 106  30      Alfanum.
	11.0 Código da Carteira                 107 108   2      Numérico   "14"        Vide NOTA 3
	12.0 Código de Ocorrência               109 110   2      Numérico   "01"        Vide NOTA 4
	13.0 Seu número                         111 120  10      Alfanum.   DETA->NUM_DOCTO
	14.0 Vencimento                         121 126   6      Numérico               Vide NOTA 13
	15.0 Valor do Título                    127 139  13      Numérico
	16.0 Código do Banco                    140 142   3      Numérico    "104"
	17.0 Agência Cobradora                  143 147   5      Numérico   Vide NOTA 5
	18.0 Espécie do Título                  148 149   2      Numérico   Vide NOTA 6               
	19.0 Aceite                             150 150   1      Alfanum.   A- aceito / N- não aceito
	20.0 Data de emissão                    151 156   6      Numérico   Data válida (DDMMAA)
	21.0 Instrução nº 1 							 157 158   2      Numérico   "00"
	22.0 Instrução nº 2                     159 160   2      Numérico   "00"                Preenchido com zeros
	23.0 Juros de 1 dia 							 161 173  13      Numérico
	24.0 Data do Desconto                   174 179   6      Numérico Data Válida (DDMMAA)
	25.0 Valor do Desconto                  180 192  13      Numérico
	26.0 Valor do I.O.F.                    193 205  13      Numérico Valor expresso em Reais
	27.0 Abatimento                         206 218  13      Numérico                     
	28.0 Inscrição do sacado                219 220   2      Numérico "02"                  "01" - CPF / "02" - CGC
	29.0 Número de Inscrição                221 234  14      Numérico Código Válido
	30.0 Nome do Sacado                     235 274  40      Alfanum.
	31.0 Logradouro Rua, número e complem.  275 314  40      Alfanum.
	32.0 Bairro do Sacado 						 315 326  12 	   Alfanum.
	33.0 CEP do Sacado 							 327 334   8 		Numérico
	34.0 Cidade do Sacado 						 335 349  15 		Alfanum.
	35.0 Estado do Sacado 						 350 351   2 		Alfanum.
	36.0 Data da Multa 							 352 357   6 		Numérico Data Valida (DDMMAA)
	37.0 Valor da Multa 							 358 367  10 		Numérico
	38.0 Nome Avalista 							 368 389  22 		Alfanum
	39.0 Instrução Número 3 					 390 391   2 		Numérico 00 - ( 01 se houver REG 2 )
	40.0 Prazo 										 392 393   2 		Numérico Vide NOTA 8
	41.0 Moeda 										 394 394   1 		Numérico Vide NOTA 9
	42.0 Número seqüencial 						 395 400   6 		Numérico
	*/
	
		dbSelectArea("DETA")  //GERANDO REGISTRO DETALHE
		RecLock("DETA",.T.)
	
		DETA->COD_REGIS 	:= "1"
		DETA->TIPO_INSCR 	:= "02"
		DETA->NUM_INSC 	:= "47436373000173"
		DETA->CODI_EMPR 	:= "0242003000009904"
		DETA->BRANCO1 		:= ""
		DETA->TX_PERMAN 	:= "00"
		_NossoNum := strzero(val(mv_par05),4) + strzero(val(_nseq),7)
		Calc_Num()     && Calcula numero conforme especif. banco
	//	DETA->NUM_TITZ9 	:= "104"+mv_par05+ _nseq
		DETA->NOSSO_NUM 	:= "82"+ strzero( VAL( mv_par05 ), 4 ) + strzero(val(_nseq),4) + Modulo11("82"+strzero( VAL( mv_par05 ), 4 ) + strzero(val(_nseq),4) )
		DETA->BRANCO2 		:= ""
		DETA->MENSAGEM1 	:= ""
		DETA->COD_CART 	:= "14"
		DETA->COD_OCORR 	:= "01"
		DETA->NUM_DOCTO 	:= IIF( mv_par11 == 1  .OR. mv_par11 == 3 .OR. mv_par11 == 5, strzero(mv_par01,2)+" "+SA1->A1_COD+mv_par02, strzero(mv_par01,2)+"E"+SA1->A1_COD+mv_par02 )
		DETA->VENCIMENTO 	:= dVenc
		DETA->VALOR 		:= "0000000000000"
		DETA->COD_BANCO 	:= "104"
		DETA->AGENCIA 		:= "00000"
		DETA->ESPECIE 		:= "01"
		DETA->ACEITE 		:= "A"
		DETA->EMISSAO 		:= dEmis
		DETA->INSTRUCAO1 	:= "00"
		DETA->INSTRUCAO2 	:= "00"
		DETA->JUROS1DIA 	:= "0000000000000"                   
		DETA->DATA_DESC 	:= dVenc
		DETA->VALOR_DESC 	:= "0000000000000"
		DETA->VALOR_IOF 	:= "0000000000000"
		DETA->ABATIMENTO 	:= "0000000000000"
		DETA->TIPO_SACA 	:= "02"
		DETA->INSCR_SACA 	:= SA1->A1_CGC                      
		DETA->NOME_SACA 	:= ValidChar( SA1->A1_NOME )
		DETA->LOGRA_SACA 	:= ValidChar( SA1->A1_END  )
		DETA->BAIRR_SACA 	:= ValidChar( SA1->A1_BAIRRO )
		DETA->CEP_SACA 	:= SA1->A1_CEP
		DETA->CIDA_SACA 	:= ValidChar( SA1->A1_MUN )
		DETA->UF_SACA 		:= ValidChar( SA1->A1_EST )                                 
		DETA->DATA_MULTA 	:= dVenc
		DETA->VLR_MULTA 	:= "0000000000"
		DETA->NOME_AVAL 	:= "SINDHOSP"
		DETA->INSTRUCAO3 	:= "00"
		DETA->PRAZO 		:= "00"
		DETA->MOEDA 		:= "1"
		DETA->NUM_SEQ	 	:= _nseq
	
		MsUnlock()
	
		dbSelectArea("MALA")
		Reclock("MALA",.T.)
		MALA->CGC_SACADO  := SA1->A1_CGC
		MALA->NOME_SACAD  := SA1->A1_NOME
		MALA->END_SACADO  := SA1->A1_END
		MALA->CEP_SACADO  := SUBSTR(SA1->A1_CEP,1,5)
		MALA->CEPC_SACAD  := SUBSTR(SA1->A1_CEP,6,3)
		MALA->BAI_SACADO  := SA1->A1_BAIRRO
		MALA->MUN_SACADO  := SA1->A1_MUN
		mala->est_SACADO  := sA1->A1_EST		
	
		IF !EMPTY(SA1->A1_ESCCONT)
			MALA->NOME_ENT    := szc->zc_nomesc
			MALA->END_ENT     := SZC->ZC_END
			MALA->CEP_ENT     := SUBSTR(SZC->ZC_CEP,1,5)
			MALA->CEPC_ENT    := SUBSTR(SZC->ZC_CEP,6,3)
			MALA->BAI_ent     := Szc->zc_BAIRRO
			MALA->MUN_ent     := Szc->zc_MUN	
			mala->est_ent     := szc->zc_EST		
		else
			MALA->NOME_ent := SA1->A1_NOME
			MALA->END_ent  := SA1->A1_END
			MALA->CEP_ent  := SUBSTR(SA1->A1_CEP,1,5)
			MALA->CEPC_ent := SUBSTR(SA1->A1_CEP,6,3)
			MALA->BAI_ent  := SA1->A1_BAIRRO
			MALA->MUN_ent  := SA1->A1_MUN
			mala->est_ent  := sA1->A1_EST		
		endif
	
		msUnlock()
	
		dbSelectArea("SZ9")
		Reclock("SZ9",.T.)
		SZ9->Z9_FILIAL := xFilial("SZ9")
		SZ9->Z9_TITULO := _NossoNum		&& Numero retorno
		SZ9->Z9_CGC    := SA1->A1_CGC
		SZ9->Z9_VENCTO := mv_par03
		IF !EMPTY(SA1->A1_ESCCONT)
			SZ9->Z9_PARCELA:= strzero(mv_par01,2)+"E"+MV_PAR02   && PP AA
		ELSE
			SZ9->Z9_PARCELA:= strzero(mv_par01,2)+" "+MV_PAR02   && PP AA
		ENDIF
		msUnlock()
	
		_nNumSeq := val( _nseq )
		_nNumSeq := _nNumSeq + 1
		_nseq := strzero( _nNumSeq,6 )
		_nRegistros := _nRegistros + 1
		dbSelectArea("SA1")
		dbskip()
	EndDO
	
	// Adiciona 1 ao SX!
	IF SX1->( DbSeek( cPerg + "05" ) )
	   RecLock( "SX1", .F. )
	   SX1->X1_CNT01 := Strzero( ( Val( SX1->X1_CNT01 ) + 1 ), 4 )
	   MsUnLock() 
	ENDIF   
	
	dbSelectArea("SEE")
	if dbseek( xFilial()+MV_PAR07+MV_PAR08+MV_PAR09+MV_PAR10 )
		RecLock("SEE",.F.)
		SEE->EE_ULTDSK := strzero(val(SEE->EE_ULTDSK)+1,6)
		dbcommit()
		MsUnlock()
	endif
	dbSelectArea("TRAI")  //GERANDO REGISTRO TRAILLER
	RecLock("TRAI",.T.)
	TRAI->COD_REGIS := "9"
	TRAI->NUM_SEQUEN := _nseq
	dbcommit()
	MsUnlock()
	totcad()
	dbSelectArea("HEAD")
	COPY TO HEAD.txt SDF
	dbSelectArea("DETA")
	COPY TO DETA.TXT SDF
	dbSelectArea("TRAI")
	COPY TO TRAI.TXT SDF
	dbSelectArea("REGI")
	Append From HEAD.TXT SDF
	append From DETA.TXT SDF
	Append From TRAI.TXT SDF
	ARQ := "\arquivos\COnfederativa\"+MV_PAR06
	COPY TO &ARQ SDF
	If File(cArqTmp4+".DBF")
		Ferase(cArqTmp4+".DBF")
	EndIf
	dbSelectArea("MALA")
	ARQ := "\arquivos\confederativa\"+MV_PAR18
	COPY TO &ARQ 	  && Gera arquivo DBF para mala direta
	dbCloseArea()
	If File(cArqTmp5+".DBF")
		Ferase(cArqTmp5+".DBF")
	EndIf
	@ 96,42 TO 290,405 DIALOG oDlg1 TITLE "Termino da Geracao"
	@ 8,10 TO 68,170
	@ 23,22 SAY "Registros Gerados"
	@ 23,95 GET _nRegistros PICTURE "@E 999,999" WHEN .F.
	@ 77,078 BMPBUTTON TYPE 1 ACTION Close(oDlg1)
	ACTIVATE DIALOG oDlg1 CENTERED
	dbSelectArea("HEAD")
	dbCloseArea()
	If File(cArqTmp1+".DBF")
		Ferase(cArqTmp1+".DBF")
	EndIf
	dbSelectArea("TRAI")
	dbCloseArea()
	if File(cArqTmp2+".DBF")
		Ferase(cArqTmp2+".DBF")
	EndIf
	dbSelectArea("DETA")
	dbCloseArea()
	If File(cArqTmp2+".DBF")
		Ferase(cArqTmp2+".DBF")
	EndIf
	If File("HEAD.TXT")
		Ferase("HEAD.TXT")
	EndIf
	If File("DETA.TXT")
		Ferase("DETA.TXT")
	EndIf
	If File("TRAI.TXT")
		Ferase("TRAI.TXT")
	EndIf
	dbSelectArea("REGI")
	dbCloseArea()
	If File(cArqTmp3+".DBF")
		Ferase(cArqTmp3+".DBF")
	EndIf
	dbSelectArea("SA1")
	dbSetOrder(1)
	
	return
	
	************************
	static Function TOTCAD()
	SetPrvt("_CALIAS,CBCONT,CBTXT,WNREL,CDESC1,CDESC2")
	SetPrvt("CDESC3,CSTRING,TAMANHO,TIPO,LIMITE,TITULO")
	SetPrvt("CABEC2,CABEC1,ARETURN,NOMEPROG,NLASTKEY,CPERG")
	SetPrvt("M_PAG,LI,_AESTR,C_ARQIMP,CARQIND,CINDSA1")
	SetPrvt("NLINHA,")
	_cAlias := alias()
	cbcont := 0
	cbtxt := ""
	wnrel := ""
	cDesc1 := "Este programa irá gerar o resumo da geração da contribuição."
	cDesc2 := ""
	cDesc3 := ""
	cString := "SA1"
	tamanho := "P"
	tipo := 15
	limite := 220
	Titulo := "Geração da contribuição Confederativa"
	cabec2 := ""
	cabec1 := ""
	aReturn := { "Zebrado", 1,"Administracao", 4, 2, 1, "",1 }
	nomeprog := "RFINA137"
	nLastkey := 0
	cPerg := "FINA37"
	m_pag := 1
	li := 80
	wnrel := "RFINA137"
	wnrel := SetPrint(cString,wnrel,cPerg,@titulo,cDesc1,cDesc2,cDesc3,.F.,,,tamanho)
	if nLastkey == 27
	    return
	endif
	SetDefault(aReturn,cString)
	if nLastkey == 27
	   return
	endif
	    RptStatus({|| impREL() },titulo)
	    return
	**********
	Static function ImpREL()
	LI := 80
	if Li >= 60
	    cabec(titulo,cabec1,cabec2,nomeprog,tamanho,tipo)
	    nLinha := prow() + 1
	endif
	@ li,000 PSAY "Registros gerados: "
	@ li,030 psay 	_nRegistros picture "@e 999,999,999"
	set device to screen
	if aReturn[5] == 1
	   set printer to
	   dbcommit()
	   ourspool(wnrel)
	endif
	MS_FLUSH()
	return
	
	***************************
	Static FUNCTION Calc_Num()
	_vNum := "06" + substr(_NossoNum,1,11)
	_m1 := val(substr(_vNum,1,1)) * 2
	_m2 := val(substr(_vNum,2,1)) * 7
	_m3 := val(substr(_vNum,3,1)) * 6
	_m4 := val(substr(_vNum,4,1)) * 5
	_m5 := val(substr(_vNum,5,1)) * 4
	_m6 := val(substr(_vNum,6,1)) * 3
	_m7 := val(substr(_vNum,7,1)) * 2
	_m8  := val(substr(_vNum,8,1)) * 7
	_m9  := val(substr(_vNum,9,1)) * 6
	_m10 := val(substr(_vNum,10,1)) * 5
	_m11 := val(substr(_vNum,11,1)) * 4
	_m12 := val(substr(_vNum,12,1)) * 3
	_m13 := val(substr(_vNum,13,1)) * 2
	_S1 := _m1 + _m2 + _m3 + _m4 + _m5 + _m6 + _m7 + _m8 + _m9 + _m10 + _m11 + _m12	+ _m13
	_r11 := mod (_S1,11)
	if _r11 == 0
		_digito := "0"
		DETA->NUM_TITZ9 := _NossoNum + _digito
		_NossoNum := _NossoNum + _digito
		return
	endif
	if _r11 == 1
		_digito := "P"
		DETA->NUM_TITZ9 := _NossoNum + _digito
		_NossoNum := _NossoNum + _digito
		return
	endif
	_digito := str((11 - _r11),1)
	DETA->NUM_TITZ9 := _NossoNum + _digito
	_NossoNum := _NossoNum + _digito
	return
	
	/*/
	±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
	±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
	±±³Funo	 ³ Modulo11 ³ Autor ³ Erick Nori Barbosa	  ³ Data ³	30/05/94³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Descrio ³ Calculo do modulo 11 												  ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Sintaxe	 ³ ExpL1 := Modulo11(ExpC1,ExpN1,ExpN2)							  ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Parametros³ ExpC1 = String para calcular o digito							  ³±±
	±±³			 ³ ExpN1 = Primeiro numero de multiplicacao do modulo 11 	  ³±±
	±±³			 ³ ExpN2 = Ultimo numero de multiplicacao do modulo 11)		  ³±±
	±±³			 ³ ExpC2 = Digito de verificacao (Retornado pela funcao) 	  ³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
	±±³ Uso		 ³ Generico 																  ³±±
	±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
	±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
	/*/
	Static Function Modulo11(cStr,nMultIni,nMultFim)
	Local i, nModulo := 0, cChar, nMult
	
	nMultIni := Iif( nMultIni==Nil,2,nMultIni )
	nMultFim := Iif( nMultFim==Nil,9,nMultFim )
	nMult := nMultIni
	cStr := AllTrim(cStr)
	
	For i := Len(cStr) to 1 Step -1
		cChar := Substr(cStr,i,1)
		If isAlpha( cChar )
			Help(" ", 1, "ONLYNUM")
			Return .f.
		End
		nModulo += Val(cChar)*nMult
		nMult:= IIf(nMult==nMultfim,2,nMult+1)
	Next
	nRest := nModulo % 11
	nRest := IIf(nRest==0 .or. nRest==1,0,11-nRest)
	Return(Str(nRest,1))
	
	/*/
	±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
	±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
	±±³Funo	 ³ ValidChar³ Autor ³ Erick Nori Barbosa	  ³ Data ³	30/05/94³±±
	±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
	±±³Descrio ³ Valida Char             											  ³±±
	±±³ Uso		 ³ Generico 																  ³±±
	±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
	±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
	/*/
	
	Static Function ValidChar( cText )
	
	LOCAL nI
	
	FOR nI := 1 to Len(cText)
		if !(substr( cText, nI,1) >= "0" .and. substr( cText, nI,1) <= "Z") .and. ;
			!(substr( cText, nI,1) >= "a" .and. substr( cText, nI,1) <= "z") .and. ;
			! substr( cText, nI,1) == " "
			cText := strtran( cText, substr( cText,nI,1), " ")
		endif
	NEXT nI
	
	RETURN cText
	